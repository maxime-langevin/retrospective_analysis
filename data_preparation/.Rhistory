) +
annotate(
'text', x = as.Date("2020-05-15"), y = 3000, label = "Ile-de-France\nregion",
color = "black", fontface = "italic", family = "Times New Roman", vjust=-.2
) +
labs(
x = paste("publication dates of the", n_reports, "reports"),
y="ICU beds\noccupied by COVID-patients", x="",
color="error of scenario\nas % of\n1st wave peak",
linetype=""
)
#save
ggsave(#svg
"../graphs/all_ICU_scenarios_reality.svg",
dpi=500, width=7, height=4, bg="white"
)
ggsave(#png
"../graphs/all_ICU_scenarios_reality.png",
dpi=500, width=7, height=4, bg="white"
)
#prepare data
#compute error relative to 1st wave peak
data_new_hosp <- data_new_hosp %>%
select(
-c(reality_report)
) %>%
gather(scenario_type, value, -c(date, report, reality)) %>%
mutate(
error = round((value-reality)/max_new_hosp*100)
)
#max error for colour scale
max_error <- max(data_new_hosp$error, na.rm = T)
#date of the reports
report_dates <- data_frame(
report = unique(as.Date(data_new_hosp$report)),
place = report #to loaclize on x axis
)
#small offset to position summer 2021 reports
report_dates$place[report_dates$place=="2021-07-26"] <- report_dates$place[report_dates$place=="2021-07-26"]-10
report_dates$place[report_dates$place=="2021-08-05"] <- report_dates$place[report_dates$place=="2021-08-05"]+3
#small offset to position winter 2021 reports
report_dates$place[report_dates$place=="2021-01-16"] <- report_dates$place[report_dates$place=="2021-01-16"]-10
report_dates$place[report_dates$place=="2021-02-02"] <- report_dates$place[report_dates$place=="2021-02-02"]-5
report_dates$place[report_dates$place=="2021-02-08"] <- report_dates$place[report_dates$place=="2021-02-08"]+10
report_dates$place[report_dates$place=="2021-02-23"] <- report_dates$place[report_dates$place=="2021-02-23"]+15
#number of reports
n_reports <- as.numeric(nrow(report_dates))
data_new_hosp <- data_new_hosp %>%
mutate(
days_since_publication = as.numeric(as.Date(date) - as.Date(report)),
report_date = report,
report = format(as.Date(report_date), format="%b %d, %Y")
)
dummy <- data_new_hosp %>%
#keep the reality value most close to publication date
group_by(report) %>%
filter(
abs(days_since_publication) == min(abs(days_since_publication))
) %>%
select(
dummy = reality, report
) %>%
distinct()
data_new_hosp <- left_join(data_new_hosp, dummy, by="report") %>%
mutate(
error_dummy = (dummy-reality)/max_new_hosp*100
)
rm(dummy)
#reorder report names
data_new_hosp$report <- factor(
data_new_hosp$report,
levels = c(
"Jan 16, 2021",
"Feb 02, 2021",
"Feb 08, 2021",
"Feb 23, 2021",
"Apr 26, 2021",
"May 21, 2021",
"Jul 26, 2021",
"Aug 05, 2021",
"Oct 04, 2021",
"Jan 07, 2022"
)
)
#plot
ggplot(data_new_hosp) +
#dates of reports on x axis
geom_rug(data = report_dates, aes(report)) +
#dates of reports on x axis
scale_x_continuous(
breaks=report_dates$place,
labels=format(report_dates$report, format="%b %d, %Y"),
limits = c(as.Date("2021-01-01"), as.Date("2022-02-12"))
) +
theme(
axis.text.x = element_text(angle = 45, hjust=1),
axis.ticks.x=element_blank()
) +
#unsmoothed reality
geom_line(data=reality_new_hosp_adm, aes(date, new_hosp), alpha=.2) +
#scenarios curves and their colours
geom_line(
aes(date, value, group=interaction(scenario_type, report), color=abs(error)),
linewidth=1
) +
scale_colour_stepsn(
colours = c("green", "orange", "red", "purple"),
values = c(0, 15, 30, 100, round(max_error))/max_error,
breaks = c(0, 15, 30, 100, round(max_error)),
labels = c("0%", "± 15%", "± 30%", "± 100%", ""),
) +
#reality
geom_line(data=reality_new_hosp_adm, aes(date, new_hosp_smooth, linetype="reality")) +
#peak 1st wave
geom_hline(yintercept = max_new_hosp, linetype="dashed") +
annotate(
'text', x = as.Date("2021-04-15"), y = max_new_hosp, label = "1st wave peak",
color = "black", fontface = "italic", family = "Times New Roman", vjust=-.4, hjust=0
) +
labs(
x = paste("publication dates of the", n_reports, "reports"),
y="daily new hospital admissions\nrelated to COVID", x="",
color="error of scenario\nerror as % of\n1st wave peak",
linetype=""
) +
ylim(0, 5500)
#save
ggsave(#svg
"../graphs/all_hosp_scenarios_reality.svg",
dpi=500, width=7, height=4, bg="white"
)
ggsave(#png
"../graphs/all_hosp_scenarios_reality.png",
dpi=500, width=7, height=4, bg="white"
)
#function for short-term scenarios changes
f_graph_short_term_changes <-
function(
reports, #a string vector of the reports to select
date_min, date_max #x limits of the graph
){
#data frame for vertical lines showing publication dates
temp <- data_frame(
report = reports, x = as.Date(reports, format = "%b %d, %Y")
)
#keep only reports of interest
temp2 <- data_new_hosp %>% filter(report %in% reports)
#chronologically order reports
temp2$report <- factor(temp2$report, levels=reports)
temp$report <- factor(temp$report, levels=reports)
#graph
g <- ggplot(temp2) +
geom_line(
aes(date, value, group=scenario_type, color="scenarios"),
linewidth=1
) +
geom_line(
data = reality_new_hosp_adm,
aes(date, new_hosp, color="reality"),
alpha=.2
) +
geom_line(
data = reality_new_hosp_adm,
aes(date, new_hosp_smooth, color="reality"),
linewidth=1
) +
geom_vline(data = temp, aes(xintercept = x), linetype="dashed") +
facet_wrap(vars(report), nrow=1) +
scale_color_manual(values=c('#ff0000','#D8D8D8')) +
labs(
x="", y="hospital admissions", color=""
)
return(g)
}
g1 <-
f_graph_short_term_changes(
c("Jan 16, 2021", "Feb 02, 2021", "Feb 08, 2021", "Feb 23, 2021")
) +
xlim(as.Date("2021-01-01"), as.Date("2021-03-25")) +
ylim(0, 3000) +
theme(legend.position = "none") +
labs(
subtitle = "vertical line: publication date"
)
g2 <-
f_graph_short_term_changes(
c("Apr 26, 2021", "May 21, 2021")
) +
xlim(as.Date("2021-04-01"), as.Date("2021-06-15")) +
ylim(0, 2100) +
theme(legend.position = "none")
g3 <-
f_graph_short_term_changes(
c("Jul 26, 2021", "Aug 05, 2021")
) +
xlim(as.Date("2021-07-15"), as.Date("2021-10-01")) +
ylim(0, NA) +
theme(
legend.position = c(0.9, 0.8),
legend.background = element_rect(fill="transparent")
)
plot_grid(
g1,
plot_grid(
g2, g3, nrow=1, labels=(c("b", "c"))
),
nrow = 2, labels=c("a", "")
)
#save
ggsave(#svg
"../graphs/short_term_changes.svg",
dpi=500, width=7, height=5, bg="white"
)
ggsave(#png
"../graphs/short_term_changes.png",
dpi=500, width=8, height=5, bg="white"
)
path_source <- "output_data/min_med_max_and_error/"
f_read_ICU_error <- function(date_scenario){
#get scenario data, add report ID
data <- read_csv(
paste0(path_source, "ICU_error/", date_scenario, "_ICU_error.csv")
) %>%
mutate(report = gsub("_", "-", date_scenario))
data <- data %>% select(report, date, error_min, error_med, error_max) %>%
filter(
is.na(error_min)==F & is.na(error_med)==F & is.na(error_max)==F
) %>%
mutate(
days_since_publication = as.Date(date)-as.Date(report)
)
return(data)
}
f_read_new_hosp_error <- function(date_scenario){
#get scenario data, add report ID
data <- read_csv(
paste0(path_source, "new_hosp_error/", date_scenario, "_new_hosp_error.csv")
) %>%
mutate(report = gsub("_", "-", date_scenario))
data <- data %>% select(report, date, error_min, error_med, error_max) %>%
filter(
is.na(error_min)==F & is.na(error_med)==F & is.na(error_max)==F
) %>%
mutate(
days_since_publication = as.Date(date)-as.Date(report)
)
return(data)
}
#ICU data
data_ICU_error <- bind_rows(
f_read_ICU_error("2020_04_28"),
f_read_ICU_error("2020_10_30"),
f_read_ICU_error("2021_05_21"),
f_read_ICU_error("2021_07_26"),
f_read_ICU_error("2021_08_05"),
f_read_ICU_error("2022_01_07")
)
#new hosp data
data_new_hosp_error <- bind_rows(
f_read_new_hosp_error("2021_01_16"),
f_read_new_hosp_error("2021_02_02"),
f_read_new_hosp_error("2021_02_08"),
f_read_new_hosp_error("2021_02_23"),
f_read_new_hosp_error("2021_04_26"),
f_read_new_hosp_error("2021_05_21"),
f_read_new_hosp_error("2021_07_26"),
f_read_new_hosp_error("2021_08_05"),
f_read_new_hosp_error("2021_10_04"),
f_read_new_hosp_error("2022_01_07")
)
temp <- bind_rows(
data_ICU_error %>% mutate(variable = "ICU"),
data_new_hosp_error  %>% mutate(variable = "new hosp")
) %>%
gather(min_med_max, error_perc, error_min, error_med, error_max)
max_error <- max(temp$error_perc, na.rm = T)
ggplot(temp) +
geom_line(
aes(days_since_publication, error_perc, color=abs(error_perc), group=report),
linewidth=1
) +
geom_vline(xintercept = 0, linetype="dashed") +
scale_colour_stepsn(
colours = c("green", "orange", "red", "purple"),
values = c(0, 15, 30, 100, max_error)/max_error,
breaks = c(0, 15, 30, 100, max_error),
labels = c("0%", "± 15%", "± 30%", "± 100%", ""),
) +
facet_grid(variable~min_med_max) +
ylim(NA, 100) +
xlim(-20, NA)
ggplot(temp %>% filter(variable=="ICU")) +
geom_line(
aes(days_since_publication, error_perc, color=abs(error_perc), group=report),
linewidth=1
) +
scale_colour_stepsn(
colours = c("green", "orange", "red", "purple"),
values = c(0, 15, 30, 100, max_error)/max_error,
breaks = c(0, 15, 30, 100, max_error),
labels = c("0%", "± 15%", "± 30%", "± 100%", "")
) +
facet_grid(min_med_max~report) +
ylim(-100, 150) + xlim(-20, NA)
ggplot(
temp %>%
filter(variable=="new hosp")
) +
geom_line(
aes(days_since_publication, error_perc, color=abs(error_perc), group=report),
linewidth=1
) +
scale_colour_stepsn(
colours = c("green", "orange", "red", "purple"),
values = c(0, 15, 30, 100, max_error)/max_error,
breaks = c(0, 15, 30, 100, max_error)
) +
facet_grid(min_med_max~report) +
ylim(-100, 150) + xlim(-20, NA)
ggplot(data_ICU_beds) +
#scenarios
geom_line(
aes(date, value, group=interaction(scenario_type, report), color="report scenarios"),
linewidth=1.5
) +
#reality national scale
geom_line(
aes(date, reality, linetype=" reality")
) +
#dummy baseline
geom_line(
aes(date, dummy, linetype="constant dummy baseline")
) +
ylim(0, NA) +
facet_wrap(vars(report), scales="free") +
labs(
title = "Pasteur Institute scenarios during COVID-19\nIntensive Care Units",
y="ICU beds\noccupied by COVID-patients", x="",
linetype="",
color=""
)
ggplot(data_new_hosp) +
#scenarios
geom_line(
aes(date, value, group=interaction(scenario_type, report), color="report scenarios"),
linewidth=1.5
) +
#reality national scale
geom_line(
aes(date, reality, linetype=" reality")
) +
#dummy baseline
geom_line(
aes(date, dummy, linetype="constant dummy baseline")
) +
ylim(0, NA) +
facet_wrap(vars(report), scales="free") +
labs(
title = "Pasteur Institute scenarios during COVID-19\nHospital Admissions",
y="daily new hospital admissions\nrelated to COVID", x="",
linetype="",
color=""
)
ggplot(data_ICU_beds) +
geom_line(aes(days_since_publication, error, color = "Pasteur's scenarios", group=scenario_type)) +
geom_line(aes(days_since_publication, error_dummy, color="dummy variable")) +
facet_wrap(vars(report)) +
geom_hline(yintercept = 0, linetype="dashed") +
ylim(-50, 150) +
labs(
y="error to reality as % of 1st wave peak",
x="number of days since report publication",
color=""
)
ggplot(data_new_hosp) +
geom_line(aes(days_since_publication, error, color = "Pasteur's scenarios", group=scenario_type)) +
geom_line(aes(days_since_publication, error_dummy, color="dummy variable")) +
facet_wrap(vars(report)) +
geom_hline(yintercept = 0, linetype="dashed") +
ylim(-50, 150) +
labs(
y="error to reality as % of 1st wave peak",
x="number of days since report publication",
color=""
)
#RMSE Mean Error for each ICU report (optimist, median and pessimist scenario)
rmse_ICU <- data_ICU_error %>%
group_by(report) %>%
filter(date>report) %>%
summarise(
optimist =  round(sqrt(sum(error_min^2)/length(which(!is.na(error_min))))),
median =  round(sqrt(sum(error_med^2)/length(which(!is.na(error_med))))),
pessimist =  round(sqrt(sum(error_max^2)/length(which(!is.na(error_max)))))
)
#RMSE Mean Error for each hospital admissions report (optimist, median and pessimist scenario)
rmse_hosp <- data_new_hosp_error %>%
group_by(report) %>%
filter(date>report) %>%
summarise(
optimist =  round(sqrt(sum(error_min^2)/length(which(!is.na(error_min))))),
median =  round(sqrt(sum(error_med^2)/length(which(!is.na(error_med))))),
pessimist =  round(sqrt(sum(error_max^2)/length(which(!is.na(error_max)))))
)
#combine ICU and hospital admissions RMSE
rmse <- bind_rows(
rmse_ICU %>% mutate(variable = "ICU"),
rmse_hosp %>% mutate(variable = "hospital admissions")
) %>%
mutate(report = as.Date(report))
rm(rmse_ICU, rmse_hosp)
#date of the reports, to position on the graph
report_dates <- data_frame(
report = unique(as.Date(rmse$report)),
place = report #to localize on x axis
)
#small offset to position summer 2021 reports
report_dates$place[report_dates$place=="2021-07-26"] <- report_dates$place[report_dates$place=="2021-07-26"]-10
report_dates$place[report_dates$place=="2021-08-05"] <- report_dates$place[report_dates$place=="2021-08-05"]+3
#small offset to position winter 2021 reports
report_dates$place[report_dates$place=="2021-01-16"] <- report_dates$place[report_dates$place=="2021-01-16"]-10
report_dates$place[report_dates$place=="2021-02-02"] <- report_dates$place[report_dates$place=="2021-02-02"]-5
report_dates$place[report_dates$place=="2021-02-08"] <- report_dates$place[report_dates$place=="2021-02-08"]+10
report_dates$place[report_dates$place=="2021-02-23"] <- report_dates$place[report_dates$place=="2021-02-23"]+15
#graph
ggplot(rmse) +
geom_point(
aes(report, median)
) +
geom_errorbar(
aes(x = report, ymin = optimist, ymax = pessimist),
width=.2
) +
facet_wrap(vars(variable), nrow = 2) +
ylim(0, 100) +
#dates of reports on x axis
scale_x_continuous(
breaks=report_dates$place,
labels=format(report_dates$report, format="%b %d, %Y")
) +
theme(
axis.text.x = element_text(angle = 45, hjust=1),
axis.ticks.x=element_blank()
) +
labs(
x="report date", y="RMSE, % of historical peak",
subtitle = "point: median scenario       error bar: range of all scenarios"
)
#ME Mean Error for each ICU report (optimist, median and pessimist scenario)
ME_ICU <- data_ICU_error %>%
group_by(report) %>%
filter(date>report) %>%
summarise(
optimist =  round(sum(error_min)/length(which(!is.na(error_min)))),
median =  round(sum(error_med)/length(which(!is.na(error_med)))),
pessimist =  round(sum(error_max)/length(which(!is.na(error_max))))
)
#ME Mean Error for each hospital admissions report (optimist, median and pessimist scenario)
ME_hosp <- data_new_hosp_error %>%
group_by(report) %>%
filter(date>report) %>%
summarise(
optimist =  round(sum(error_min)/length(which(!is.na(error_min)))),
median =  round(sum(error_med)/length(which(!is.na(error_med)))),
pessimist =  round(sum(error_max)/length(which(!is.na(error_max))))
)
#combine ICU and hospital admissions ME
ME <- bind_rows(
ME_ICU %>% mutate(variable = "ICU"),
ME_hosp %>% mutate(variable = "hospital admissions")
) %>%
mutate(report = as.Date(report))
rm(ME_ICU, ME_hosp)
#date of the reports, to position on the graph
report_dates <- data_frame(
report = unique(as.Date(ME$report)),
place = report #to localize on x axis
)
#small offset to position summer 2021 reports
report_dates$place[report_dates$place=="2021-07-26"] <- report_dates$place[report_dates$place=="2021-07-26"]-10
report_dates$place[report_dates$place=="2021-08-05"] <- report_dates$place[report_dates$place=="2021-08-05"]+3
#small offset to position winter 2021 reports
report_dates$place[report_dates$place=="2021-01-16"] <- report_dates$place[report_dates$place=="2021-01-16"]-10
report_dates$place[report_dates$place=="2021-02-02"] <- report_dates$place[report_dates$place=="2021-02-02"]-5
report_dates$place[report_dates$place=="2021-02-08"] <- report_dates$place[report_dates$place=="2021-02-08"]+10
report_dates$place[report_dates$place=="2021-02-23"] <- report_dates$place[report_dates$place=="2021-02-23"]+15
#graph
ggplot(ME) +
geom_point(
aes(report, median)
) +
geom_errorbar(
aes(x = report, ymin = optimist, ymax = pessimist),
width=.2
) +
facet_wrap(vars(variable), nrow = 2) +
ylim(-100, 100) + #dates of reports on x axis
#dates of reports on x axis
scale_x_continuous(
breaks=report_dates$place,
labels=format(report_dates$report, format="%b %d, %Y")
) +
theme(
axis.text.x = element_text(angle = 45, hjust=1),
axis.ticks.x=element_blank()
) +
geom_hline(yintercept = 0, linetype = "dashed", alpha=.5) +
labs(
x="report date", y="mean error, % of historical peak",
subtitle = "point: median scenario       error bar: range of all scenarios"
)
capabilities()
rmarkdown::render_site()
